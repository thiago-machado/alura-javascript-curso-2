{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","objeto","props","acao","Proxy","get","target","prop","receiver","includes","Function","console","log","Reflect","apply","arguments","set","value"],"mappings":";;;;;;;;IAAMA,Y;;;;;;;2BAEUC,M,EAAQC,K,EAAOC,I,EAAM;AACjC,aAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;AACvBI,WADuB,eACnBC,MADmB,EACXC,IADW,EACLC,QADK,EACK;;AAE1B,cAAGN,MAAMO,QAAN,CAAeF,IAAf,KAAwB,QAAOD,OAAOC,IAAP,CAAP,aAA+BG,QAA/B,yCAA+BA,QAA/B,EAA3B,EAAqE;AACnE,mBAAO,YAAW;AAChBC,sBAAQC,GAAR,sBAA8BL,IAA9B;;AAEA;AACA;;AAEAM,sBAAQC,KAAR,CAAcR,OAAOC,IAAP,CAAd,EAA4BD,MAA5B,EAAoCS,SAApC,EANgB,CAMgC;;AAEhD;AACA;AACA,qBAAOZ,KAAKG,MAAL,CAAP;AACD,aAXD;AAYD;AACD,iBAAOO,QAAQR,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,CAAP;AACD,SAlBsB;;;AAqBvB;;;;AAIAQ,WAzBuB,eAyBnBV,MAzBmB,EAyBXC,IAzBW,EAyBLU,KAzBK,EAyBET,QAzBF,EAyBY;AACjC,cAAGN,MAAMO,QAAN,CAAeF,IAAf,CAAH,EAAyB;AACvBI,oBAAQC,GAAR,sBAA8BL,IAA9B;;AAEA;AACA;AACAD,mBAAOC,IAAP,IAAeU,KAAf;AACAd,iBAAKG,MAAL;AACD;;AAED,iBAAOO,QAAQG,GAAR,CAAYV,MAAZ,EAAoBC,IAApB,EAA0BU,KAA1B,EAAiCT,QAAjC,CAAP;AACD;AApCsB,OAAlB,CAAP;AAsCD","file":"ProxyFactory.js","sourcesContent":["class ProxyFactory {\r\n\r\n  static create(objeto, props, acao) {\r\n    return new Proxy(objeto, {\r\n      get(target, prop, receiver) {\r\n\r\n        if(props.includes(prop) && typeof(target[prop]) == typeof(Function)) {\r\n          return function() {\r\n            console.log(`A propriedade \"${prop}\" foi interceptada`);\r\n\r\n            // Relembrando que arguments é uma variável implícita que possui todos os valores\r\n            // passados por parâmtro na execução da função original\r\n\r\n            Reflect.apply(target[prop], target, arguments); // Prossegue com o método original\r\n\r\n            // Execução da ação desejada após a execução original\r\n            // Estamos usando return pois não sabemos se a função possuirá, ou não, um retorno\r\n            return acao(target);\r\n          }\r\n        }\r\n        return Reflect.get(target, prop, receiver);\r\n      },\r\n\r\n\r\n      /*\r\n      Interceptando as atribuições.\r\n      Isso resolverá a atualização da view de Mensagens.\r\n      */\r\n      set(target, prop, value, receiver) {\r\n        if(props.includes(prop)) {\r\n          console.log(`A propriedade \"${prop}\" foi interceptada`);\r\n\r\n          // Precisamos atualizar a propriedade com o novo valor antes de chamar a ação\r\n          // Senão, a execução da ação não terá nenhum valor novo\r\n          target[prop] = value;\r\n          acao(target);\r\n        }\r\n\r\n        return Reflect.set(target, prop, value, receiver);\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}