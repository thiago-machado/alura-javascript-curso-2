{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","map","item","indice"],"mappings":";;;;;;;;IAAMA,U;;AAEJ;AACA,wBAAc;AAAA;;AACZ,UAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED;;;;;;;;kCAIqBC,I,EAAM;AACzB;AACA,aAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACD;;;kCAEoBC,K,EAAO;AAC1B;AACA,UAAG,CAAC,oBAAoBC,IAApB,CAAyBD,KAAzB,CAAJ,EAAqC;AACnC,cAAM,IAAIL,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,gDAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAMC,MAAN;AAAA,eAAiBD,OAAOC,SAAS,CAAjC;AAAA,OAArB,CAAnB;AACD","file":"DateHelper.js","sourcesContent":["class DateHelper {\r\n\r\n  // Lançando exceção caso alguém tente instanciar essa classe\r\n  constructor() {\r\n    throw new Error('DateHelper não pode ser instanciada');\r\n  }\r\n\r\n  /*\r\n  Os métodos são estáticos. Dessa forma, podemos usar os métodos sem\r\n  instanciar a classe.\r\n  */\r\n  static dataParaTexto(data) {\r\n    // Formatando data usando template string\r\n    return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\r\n  }\r\n\r\n  static textoParaData(texto) {\r\n    // Verificando se a data está no formato yyyy-mm-dd através do uso de uma expressão regular\r\n    if(!/\\d{4}-\\d{2}-\\d{2}/.test(texto)) {\r\n      throw new Error('Deve estar no formato yyyy-mm-dd');\r\n    }\r\n\r\n    return new Date(...texto.split('-').map((item,indice) => item - indice % 2));\r\n  }\r\n}\r\n"]}